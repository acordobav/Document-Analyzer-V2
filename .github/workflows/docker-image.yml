name: Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build-documentanalyzerapi:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: docker login
      env: 
        DOCKER_USER: ${{secrets.DOCKER_USER}}
        DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      run: |
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
    - name: Build the DocumentAnalyzerAPI Docker image
      run: cd ./DocumentAnalyzerAPI && docker build . --file DocumentAnalyzerAPI/Dockerfile --tag ${{secrets.DOCKER_USER}}/documentanalyzerapi:latest
    - name: DocumentAnalyzerAPI Docker Push
      run: cd ./DocumentAnalyzerAPI && docker push ${{secrets.DOCKER_USER}}/documentanalyzerapi


  build-employeefinder:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: docker login
      env: 
        DOCKER_USER: ${{secrets.DOCKER_USER}}
        DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      run: |
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
    - name: Build the EmployeeFinderAPI Docker image
      run: cd ./EmployeeFinderAPI && docker build . --file EmployeeFinder/Dockerfile --tag ${{secrets.DOCKER_USER}}/employeefinder:latest
    - name: EmployeeFinderAPI Docker Push
      run: cd ./EmployeeFinderAPI && docker push ${{secrets.DOCKER_USER}}/employeefinder

  build-frontend:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: docker login
      env: 
        DOCKER_USER: ${{secrets.DOCKER_USER}}
        DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      run: |
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
    - name: Build the FrontEnd Docker image
      run: cd ./FrontEnd && docker build . --file Dockerfile --tag ${{secrets.DOCKER_USER}}/docanalyzer-frontend:latest
    - name: FrontEnd Docker Push
      run: cd ./FrontEnd && docker push ${{secrets.DOCKER_USER}}/docanalyzer-frontend


  build-docanalyzer-websocket:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: docker login
      env: 
        DOCKER_USER: ${{secrets.DOCKER_USER}}
        DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      run: |
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
    - name: Build the WebSocket Docker image
      run: cd ./RabbitMQHandler && docker build . --file Dockerfile --tag ${{secrets.DOCKER_USER}}/docanalyzer-websocket:latest
    - name: WebSocket Docker Push
      run: cd ./RabbitMQHandler && docker push ${{secrets.DOCKER_USER}}/docanalyzer-websocket

  
  build-entityrecognitionapi:
  
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: docker login
      env: 
        DOCKER_USER: ${{secrets.DOCKER_USER2}}
        DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD2}}
      run: |
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
        
    - name: Build the EntityRecognitionAPI Docker image
      run: cd ./NLPService && docker build . --file EntityRecognitionAPI/Dockerfile --tag ${{secrets.DOCKER_USER2}}/entityrecognitionapi:latest
    - name: EntityRecognitionAPI Docker Push
      run: cd ./NLPService && docker push ${{secrets.DOCKER_USER2}}/entityrecognitionapi
      

  build-offensivecontentapi:
  
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: docker login
      env: 
        DOCKER_USER: ${{secrets.DOCKER_USER2}}
        DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD2}}
      run: |
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
        
    - name: Build the OffensiveContentAPI Docker image
      run: cd ./NLPService && docker build . --file OffensiveContentAPI/Dockerfile --tag ${{secrets.DOCKER_USER2}}/offensivecontentapi:latest
    - name: OffensiveContentAPI Docker Push
      run: cd ./NLPService && docker push ${{secrets.DOCKER_USER2}}/offensivecontentapi
      
      
  build-sentimentanalysisapi:
  
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: docker login
      env: 
        DOCKER_USER: ${{secrets.DOCKER_USER2}}
        DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD2}}
      run: |
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
        
    - name: Build the SentimentAnalysisAPI Docker image
      run: cd ./NLPService && docker build . --file SentimentAnalysisAPI/Dockerfile --tag ${{secrets.DOCKER_USER2}}/sentimentanalysisapi:latest
    - name: SentimentAnalysisAPI Docker Push
      run: cd ./NLPService && docker push ${{secrets.DOCKER_USER2}}/sentimentanalysisapi
